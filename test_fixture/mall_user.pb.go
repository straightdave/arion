// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: mall_user.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Count   int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HelloReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Indentor                bool   `protobuf:"varint,3,opt,name=indentor,proto3" json:"indentor,omitempty"`
	IndentorLevelId         string `protobuf:"bytes,4,opt,name=indentor_level_id,json=indentorLevelId,proto3" json:"indentor_level_id,omitempty"`
	Superior                string `protobuf:"bytes,5,opt,name=superior,proto3" json:"superior,omitempty"`
	IndentorLevelName       string `protobuf:"bytes,6,opt,name=indentor_level_name,json=indentorLevelName,proto3" json:"indentor_level_name,omitempty"`
	SuperiorName            string `protobuf:"bytes,7,opt,name=superior_name,json=superiorName,proto3" json:"superior_name,omitempty"`
	SuperiorIndentorLevelId string `protobuf:"bytes,8,opt,name=superior_indentor_level_id,json=superiorIndentorLevelId,proto3" json:"superior_indentor_level_id,omitempty"`
	Avatar                  string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetIndentor() bool {
	if x != nil {
		return x.Indentor
	}
	return false
}

func (x *User) GetIndentorLevelId() string {
	if x != nil {
		return x.IndentorLevelId
	}
	return ""
}

func (x *User) GetSuperior() string {
	if x != nil {
		return x.Superior
	}
	return ""
}

func (x *User) GetIndentorLevelName() string {
	if x != nil {
		return x.IndentorLevelName
	}
	return ""
}

func (x *User) GetSuperiorName() string {
	if x != nil {
		return x.SuperiorName
	}
	return ""
}

func (x *User) GetSuperiorIndentorLevelId() string {
	if x != nil {
		return x.SuperiorIndentorLevelId
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ReloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReloadRequest) Reset() {
	*x = ReloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadRequest) ProtoMessage() {}

func (x *ReloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadRequest.ProtoReflect.Descriptor instead.
func (*ReloadRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{3}
}

func (x *ReloadRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReloadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReloadReply) Reset() {
	*x = ReloadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadReply) ProtoMessage() {}

func (x *ReloadReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadReply.ProtoReflect.Descriptor instead.
func (*ReloadReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{4}
}

func (x *ReloadReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IndentorOnly bool   `protobuf:"varint,2,opt,name=indentorOnly,proto3" json:"indentorOnly,omitempty"`
	IncludeSelf  bool   `protobuf:"varint,3,opt,name=includeSelf,proto3" json:"includeSelf,omitempty"`
}

func (x *GetTeamRequest) Reset() {
	*x = GetTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRequest) ProtoMessage() {}

func (x *GetTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTeamRequest) GetIndentorOnly() bool {
	if x != nil {
		return x.IndentorOnly
	}
	return false
}

func (x *GetTeamRequest) GetIncludeSelf() bool {
	if x != nil {
		return x.IncludeSelf
	}
	return false
}

type GetTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetTeamReply) Reset() {
	*x = GetTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamReply) ProtoMessage() {}

func (x *GetTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamReply.ProtoReflect.Descriptor instead.
func (*GetTeamReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetTeamReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTeamReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetSubsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IndentorOnly bool   `protobuf:"varint,2,opt,name=indentorOnly,proto3" json:"indentorOnly,omitempty"`
	IncludeSelf  bool   `protobuf:"varint,3,opt,name=includeSelf,proto3" json:"includeSelf,omitempty"`
}

func (x *GetSubsRequest) Reset() {
	*x = GetSubsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubsRequest) ProtoMessage() {}

func (x *GetSubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubsRequest.ProtoReflect.Descriptor instead.
func (*GetSubsRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSubsRequest) GetIndentorOnly() bool {
	if x != nil {
		return x.IndentorOnly
	}
	return false
}

func (x *GetSubsRequest) GetIncludeSelf() bool {
	if x != nil {
		return x.IncludeSelf
	}
	return false
}

type GetSubsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetSubsReply) Reset() {
	*x = GetSubsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubsReply) ProtoMessage() {}

func (x *GetSubsReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubsReply.ProtoReflect.Descriptor instead.
func (*GetSubsReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubsReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetSubsReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetSubSubsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IndentorOnly bool   `protobuf:"varint,2,opt,name=indentorOnly,proto3" json:"indentorOnly,omitempty"`
	IncludeSelf  bool   `protobuf:"varint,3,opt,name=includeSelf,proto3" json:"includeSelf,omitempty"`
}

func (x *GetSubSubsRequest) Reset() {
	*x = GetSubSubsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubSubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubSubsRequest) ProtoMessage() {}

func (x *GetSubSubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubSubsRequest.ProtoReflect.Descriptor instead.
func (*GetSubSubsRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubSubsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSubSubsRequest) GetIndentorOnly() bool {
	if x != nil {
		return x.IndentorOnly
	}
	return false
}

func (x *GetSubSubsRequest) GetIncludeSelf() bool {
	if x != nil {
		return x.IncludeSelf
	}
	return false
}

type GetSubSubsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetSubSubsReply) Reset() {
	*x = GetSubSubsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubSubsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubSubsReply) ProtoMessage() {}

func (x *GetSubSubsReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubSubsReply.ProtoReflect.Descriptor instead.
func (*GetSubSubsReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubSubsReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetSubSubsReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetSuperiorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSuperiorRequest) Reset() {
	*x = GetSuperiorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperiorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperiorRequest) ProtoMessage() {}

func (x *GetSuperiorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperiorRequest.ProtoReflect.Descriptor instead.
func (*GetSuperiorRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetSuperiorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSuperiorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Superior *User `protobuf:"bytes,1,opt,name=superior,proto3" json:"superior,omitempty"`
}

func (x *GetSuperiorReply) Reset() {
	*x = GetSuperiorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperiorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperiorReply) ProtoMessage() {}

func (x *GetSuperiorReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperiorReply.ProtoReflect.Descriptor instead.
func (*GetSuperiorReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetSuperiorReply) GetSuperior() *User {
	if x != nil {
		return x.Superior
	}
	return nil
}

type GetAllSuperiorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IndentorOnly bool   `protobuf:"varint,2,opt,name=indentorOnly,proto3" json:"indentorOnly,omitempty"`
	IncludeSelf  bool   `protobuf:"varint,3,opt,name=includeSelf,proto3" json:"includeSelf,omitempty"`
}

func (x *GetAllSuperiorsRequest) Reset() {
	*x = GetAllSuperiorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSuperiorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSuperiorsRequest) ProtoMessage() {}

func (x *GetAllSuperiorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSuperiorsRequest.ProtoReflect.Descriptor instead.
func (*GetAllSuperiorsRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllSuperiorsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllSuperiorsRequest) GetIndentorOnly() bool {
	if x != nil {
		return x.IndentorOnly
	}
	return false
}

func (x *GetAllSuperiorsRequest) GetIncludeSelf() bool {
	if x != nil {
		return x.IncludeSelf
	}
	return false
}

type GetAllSuperiorsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Superiors []*User `protobuf:"bytes,2,rep,name=superiors,proto3" json:"superiors,omitempty"`
}

func (x *GetAllSuperiorsReply) Reset() {
	*x = GetAllSuperiorsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSuperiorsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSuperiorsReply) ProtoMessage() {}

func (x *GetAllSuperiorsReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSuperiorsReply.ProtoReflect.Descriptor instead.
func (*GetAllSuperiorsReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{14}
}

func (x *GetAllSuperiorsReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAllSuperiorsReply) GetSuperiors() []*User {
	if x != nil {
		return x.Superiors
	}
	return nil
}

type ChangeSuperiorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NewSuperior string `protobuf:"bytes,2,opt,name=new_superior,json=newSuperior,proto3" json:"new_superior,omitempty"`
}

func (x *ChangeSuperiorRequest) Reset() {
	*x = ChangeSuperiorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSuperiorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSuperiorRequest) ProtoMessage() {}

func (x *ChangeSuperiorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSuperiorRequest.ProtoReflect.Descriptor instead.
func (*ChangeSuperiorRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeSuperiorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeSuperiorRequest) GetNewSuperior() string {
	if x != nil {
		return x.NewSuperior
	}
	return ""
}

type ChangeSuperiorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OldSuperior string `protobuf:"bytes,2,opt,name=old_superior,json=oldSuperior,proto3" json:"old_superior,omitempty"`
	NewSuperior string `protobuf:"bytes,3,opt,name=new_superior,json=newSuperior,proto3" json:"new_superior,omitempty"`
}

func (x *ChangeSuperiorReply) Reset() {
	*x = ChangeSuperiorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSuperiorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSuperiorReply) ProtoMessage() {}

func (x *ChangeSuperiorReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSuperiorReply.ProtoReflect.Descriptor instead.
func (*ChangeSuperiorReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeSuperiorReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeSuperiorReply) GetOldSuperior() string {
	if x != nil {
		return x.OldSuperior
	}
	return ""
}

func (x *ChangeSuperiorReply) GetNewSuperior() string {
	if x != nil {
		return x.NewSuperior
	}
	return ""
}

type UpsertUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpsertUserRequest) Reset() {
	*x = UpsertUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertUserRequest) ProtoMessage() {}

func (x *UpsertUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertUserRequest.ProtoReflect.Descriptor instead.
func (*UpsertUserRequest) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{17}
}

func (x *UpsertUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpsertUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpsertUserReply) Reset() {
	*x = UpsertUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertUserReply) ProtoMessage() {}

func (x *UpsertUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_mall_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertUserReply.ProtoReflect.Descriptor instead.
func (*UpsertUserReply) Descriptor() ([]byte, []int) {
	return file_mall_user_proto_rawDescGZIP(), []int{18}
}

func (x *UpsertUserReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_mall_user_proto protoreflect.FileDescriptor

var file_mall_user_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x29,
	0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x52, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x22, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x6c,
	0x66, 0x22, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x75,
	0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x22,
	0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x21, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x72, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65,
	0x6c, 0x66, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x73, 0x22, 0x4a, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x22, 0x6b, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x6c, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x22, 0x2e,
	0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2b,
	0x0a, 0x0f, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xf0, 0x03, 0x0a, 0x14,
	0x4d, 0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x12, 0x0d, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0b, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x28,
	0x0a, 0x06, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x75, 0x62, 0x73,
	0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x75, 0x62,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x14,
	0x0a, 0x0e, 0x63, 0x6f, 0x2e, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5a, 0x02, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mall_user_proto_rawDescOnce sync.Once
	file_mall_user_proto_rawDescData = file_mall_user_proto_rawDesc
)

func file_mall_user_proto_rawDescGZIP() []byte {
	file_mall_user_proto_rawDescOnce.Do(func() {
		file_mall_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_mall_user_proto_rawDescData)
	})
	return file_mall_user_proto_rawDescData
}

var file_mall_user_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_mall_user_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),           // 0: HelloRequest
	(*HelloReply)(nil),             // 1: HelloReply
	(*User)(nil),                   // 2: User
	(*ReloadRequest)(nil),          // 3: ReloadRequest
	(*ReloadReply)(nil),            // 4: ReloadReply
	(*GetTeamRequest)(nil),         // 5: GetTeamRequest
	(*GetTeamReply)(nil),           // 6: GetTeamReply
	(*GetSubsRequest)(nil),         // 7: GetSubsRequest
	(*GetSubsReply)(nil),           // 8: GetSubsReply
	(*GetSubSubsRequest)(nil),      // 9: GetSubSubsRequest
	(*GetSubSubsReply)(nil),        // 10: GetSubSubsReply
	(*GetSuperiorRequest)(nil),     // 11: GetSuperiorRequest
	(*GetSuperiorReply)(nil),       // 12: GetSuperiorReply
	(*GetAllSuperiorsRequest)(nil), // 13: GetAllSuperiorsRequest
	(*GetAllSuperiorsReply)(nil),   // 14: GetAllSuperiorsReply
	(*ChangeSuperiorRequest)(nil),  // 15: ChangeSuperiorRequest
	(*ChangeSuperiorReply)(nil),    // 16: ChangeSuperiorReply
	(*UpsertUserRequest)(nil),      // 17: UpsertUserRequest
	(*UpsertUserReply)(nil),        // 18: UpsertUserReply
}
var file_mall_user_proto_depIdxs = []int32{
	2,  // 0: GetTeamReply.users:type_name -> User
	2,  // 1: GetSubsReply.users:type_name -> User
	2,  // 2: GetSubSubsReply.users:type_name -> User
	2,  // 3: GetSuperiorReply.superior:type_name -> User
	2,  // 4: GetAllSuperiorsReply.superiors:type_name -> User
	2,  // 5: UpsertUserRequest.user:type_name -> User
	0,  // 6: MallUserCacheService.SayHello:input_type -> HelloRequest
	3,  // 7: MallUserCacheService.Reload:input_type -> ReloadRequest
	5,  // 8: MallUserCacheService.GetTeam:input_type -> GetTeamRequest
	7,  // 9: MallUserCacheService.GetSubs:input_type -> GetSubsRequest
	9,  // 10: MallUserCacheService.GetSubSubs:input_type -> GetSubSubsRequest
	11, // 11: MallUserCacheService.GetSuperior:input_type -> GetSuperiorRequest
	13, // 12: MallUserCacheService.GetAllSuperiors:input_type -> GetAllSuperiorsRequest
	15, // 13: MallUserCacheService.ChangeSuperior:input_type -> ChangeSuperiorRequest
	17, // 14: MallUserCacheService.UpsertUser:input_type -> UpsertUserRequest
	1,  // 15: MallUserCacheService.SayHello:output_type -> HelloReply
	4,  // 16: MallUserCacheService.Reload:output_type -> ReloadReply
	6,  // 17: MallUserCacheService.GetTeam:output_type -> GetTeamReply
	8,  // 18: MallUserCacheService.GetSubs:output_type -> GetSubsReply
	10, // 19: MallUserCacheService.GetSubSubs:output_type -> GetSubSubsReply
	12, // 20: MallUserCacheService.GetSuperior:output_type -> GetSuperiorReply
	14, // 21: MallUserCacheService.GetAllSuperiors:output_type -> GetAllSuperiorsReply
	16, // 22: MallUserCacheService.ChangeSuperior:output_type -> ChangeSuperiorReply
	18, // 23: MallUserCacheService.UpsertUser:output_type -> UpsertUserReply
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_mall_user_proto_init() }
func file_mall_user_proto_init() {
	if File_mall_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mall_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubSubsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubSubsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperiorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperiorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSuperiorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSuperiorsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSuperiorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSuperiorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mall_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mall_user_proto_goTypes,
		DependencyIndexes: file_mall_user_proto_depIdxs,
		MessageInfos:      file_mall_user_proto_msgTypes,
	}.Build()
	File_mall_user_proto = out.File
	file_mall_user_proto_rawDesc = nil
	file_mall_user_proto_goTypes = nil
	file_mall_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MallUserCacheServiceClient is the client API for MallUserCacheService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MallUserCacheServiceClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	Reload(ctx context.Context, in *ReloadRequest, opts ...grpc.CallOption) (*ReloadReply, error)
	GetTeam(ctx context.Context, in *GetTeamRequest, opts ...grpc.CallOption) (*GetTeamReply, error)
	GetSubs(ctx context.Context, in *GetSubsRequest, opts ...grpc.CallOption) (*GetSubsReply, error)
	GetSubSubs(ctx context.Context, in *GetSubSubsRequest, opts ...grpc.CallOption) (*GetSubSubsReply, error)
	GetSuperior(ctx context.Context, in *GetSuperiorRequest, opts ...grpc.CallOption) (*GetSuperiorReply, error)
	GetAllSuperiors(ctx context.Context, in *GetAllSuperiorsRequest, opts ...grpc.CallOption) (*GetAllSuperiorsReply, error)
	ChangeSuperior(ctx context.Context, in *ChangeSuperiorRequest, opts ...grpc.CallOption) (*ChangeSuperiorReply, error)
	UpsertUser(ctx context.Context, in *UpsertUserRequest, opts ...grpc.CallOption) (*UpsertUserReply, error)
}

type mallUserCacheServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMallUserCacheServiceClient(cc grpc.ClientConnInterface) MallUserCacheServiceClient {
	return &mallUserCacheServiceClient{cc}
}

func (c *mallUserCacheServiceClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) Reload(ctx context.Context, in *ReloadRequest, opts ...grpc.CallOption) (*ReloadReply, error) {
	out := new(ReloadReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/Reload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) GetTeam(ctx context.Context, in *GetTeamRequest, opts ...grpc.CallOption) (*GetTeamReply, error) {
	out := new(GetTeamReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/GetTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) GetSubs(ctx context.Context, in *GetSubsRequest, opts ...grpc.CallOption) (*GetSubsReply, error) {
	out := new(GetSubsReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/GetSubs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) GetSubSubs(ctx context.Context, in *GetSubSubsRequest, opts ...grpc.CallOption) (*GetSubSubsReply, error) {
	out := new(GetSubSubsReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/GetSubSubs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) GetSuperior(ctx context.Context, in *GetSuperiorRequest, opts ...grpc.CallOption) (*GetSuperiorReply, error) {
	out := new(GetSuperiorReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/GetSuperior", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) GetAllSuperiors(ctx context.Context, in *GetAllSuperiorsRequest, opts ...grpc.CallOption) (*GetAllSuperiorsReply, error) {
	out := new(GetAllSuperiorsReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/GetAllSuperiors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) ChangeSuperior(ctx context.Context, in *ChangeSuperiorRequest, opts ...grpc.CallOption) (*ChangeSuperiorReply, error) {
	out := new(ChangeSuperiorReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/ChangeSuperior", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mallUserCacheServiceClient) UpsertUser(ctx context.Context, in *UpsertUserRequest, opts ...grpc.CallOption) (*UpsertUserReply, error) {
	out := new(UpsertUserReply)
	err := c.cc.Invoke(ctx, "/MallUserCacheService/UpsertUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MallUserCacheServiceServer is the server API for MallUserCacheService service.
type MallUserCacheServiceServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	Reload(context.Context, *ReloadRequest) (*ReloadReply, error)
	GetTeam(context.Context, *GetTeamRequest) (*GetTeamReply, error)
	GetSubs(context.Context, *GetSubsRequest) (*GetSubsReply, error)
	GetSubSubs(context.Context, *GetSubSubsRequest) (*GetSubSubsReply, error)
	GetSuperior(context.Context, *GetSuperiorRequest) (*GetSuperiorReply, error)
	GetAllSuperiors(context.Context, *GetAllSuperiorsRequest) (*GetAllSuperiorsReply, error)
	ChangeSuperior(context.Context, *ChangeSuperiorRequest) (*ChangeSuperiorReply, error)
	UpsertUser(context.Context, *UpsertUserRequest) (*UpsertUserReply, error)
}

// UnimplementedMallUserCacheServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMallUserCacheServiceServer struct {
}

func (*UnimplementedMallUserCacheServiceServer) SayHello(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) Reload(context.Context, *ReloadRequest) (*ReloadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reload not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) GetTeam(context.Context, *GetTeamRequest) (*GetTeamReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeam not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) GetSubs(context.Context, *GetSubsRequest) (*GetSubsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubs not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) GetSubSubs(context.Context, *GetSubSubsRequest) (*GetSubSubsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubSubs not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) GetSuperior(context.Context, *GetSuperiorRequest) (*GetSuperiorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSuperior not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) GetAllSuperiors(context.Context, *GetAllSuperiorsRequest) (*GetAllSuperiorsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSuperiors not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) ChangeSuperior(context.Context, *ChangeSuperiorRequest) (*ChangeSuperiorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeSuperior not implemented")
}
func (*UnimplementedMallUserCacheServiceServer) UpsertUser(context.Context, *UpsertUserRequest) (*UpsertUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertUser not implemented")
}

func RegisterMallUserCacheServiceServer(s *grpc.Server, srv MallUserCacheServiceServer) {
	s.RegisterService(&_MallUserCacheService_serviceDesc, srv)
}

func _MallUserCacheService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_Reload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).Reload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/Reload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).Reload(ctx, req.(*ReloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_GetTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).GetTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/GetTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).GetTeam(ctx, req.(*GetTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_GetSubs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).GetSubs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/GetSubs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).GetSubs(ctx, req.(*GetSubsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_GetSubSubs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubSubsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).GetSubSubs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/GetSubSubs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).GetSubSubs(ctx, req.(*GetSubSubsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_GetSuperior_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuperiorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).GetSuperior(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/GetSuperior",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).GetSuperior(ctx, req.(*GetSuperiorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_GetAllSuperiors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllSuperiorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).GetAllSuperiors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/GetAllSuperiors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).GetAllSuperiors(ctx, req.(*GetAllSuperiorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_ChangeSuperior_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSuperiorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).ChangeSuperior(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/ChangeSuperior",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).ChangeSuperior(ctx, req.(*ChangeSuperiorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MallUserCacheService_UpsertUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MallUserCacheServiceServer).UpsertUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MallUserCacheService/UpsertUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MallUserCacheServiceServer).UpsertUser(ctx, req.(*UpsertUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MallUserCacheService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MallUserCacheService",
	HandlerType: (*MallUserCacheServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _MallUserCacheService_SayHello_Handler,
		},
		{
			MethodName: "Reload",
			Handler:    _MallUserCacheService_Reload_Handler,
		},
		{
			MethodName: "GetTeam",
			Handler:    _MallUserCacheService_GetTeam_Handler,
		},
		{
			MethodName: "GetSubs",
			Handler:    _MallUserCacheService_GetSubs_Handler,
		},
		{
			MethodName: "GetSubSubs",
			Handler:    _MallUserCacheService_GetSubSubs_Handler,
		},
		{
			MethodName: "GetSuperior",
			Handler:    _MallUserCacheService_GetSuperior_Handler,
		},
		{
			MethodName: "GetAllSuperiors",
			Handler:    _MallUserCacheService_GetAllSuperiors_Handler,
		},
		{
			MethodName: "ChangeSuperior",
			Handler:    _MallUserCacheService_ChangeSuperior_Handler,
		},
		{
			MethodName: "UpsertUser",
			Handler:    _MallUserCacheService_UpsertUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mall_user.proto",
}
